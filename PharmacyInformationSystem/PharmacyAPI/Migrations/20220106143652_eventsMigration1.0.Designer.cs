// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PharmacyClassLib;

namespace PharmacyAPI.Migrations
{
    [DbContext(typeof(EventsDbContext))]
    [Migration("20220106143652_eventsMigration1.0")]
    partial class eventsMigration10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("PharmacyClassLib.Model.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EventApplicationName")
                        .HasColumnType("integer");

                    b.Property<int>("EventClass")
                        .HasColumnType("integer");

                    b.Property<double>("OptionalEventNumInfo")
                        .HasColumnType("double precision");

                    b.Property<double>("OptionalEventNumInfo2")
                        .HasColumnType("double precision");

                    b.Property<string>("OptionalEventStrInfo")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EventApplicationName = 0,
                            EventClass = 1,
                            OptionalEventNumInfo = 0.0,
                            OptionalEventNumInfo2 = 0.0,
                            TimeStamp = new DateTime(2022, 1, 6, 15, 36, 52, 520, DateTimeKind.Local).AddTicks(3467),
                            UserId = "username1"
                        },
                        new
                        {
                            Id = 2L,
                            EventApplicationName = 0,
                            EventClass = 2,
                            OptionalEventNumInfo = 0.0,
                            OptionalEventNumInfo2 = 0.0,
                            TimeStamp = new DateTime(2022, 1, 6, 15, 36, 52, 522, DateTimeKind.Local).AddTicks(5060),
                            UserId = "username2"
                        },
                        new
                        {
                            Id = 3L,
                            EventApplicationName = 0,
                            EventClass = 0,
                            OptionalEventNumInfo = 1.0,
                            OptionalEventNumInfo2 = 0.0,
                            TimeStamp = new DateTime(2022, 1, 6, 15, 36, 52, 522, DateTimeKind.Local).AddTicks(5083),
                            UserId = "username1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
